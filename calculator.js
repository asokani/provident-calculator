// Generated by CoffeeScript 1.3.3
(function() {
  var Computation, NumberFormat, Tooltip,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  NumberFormat = (function() {

    function NumberFormat() {}

    NumberFormat.format = function(number, decimals, dec_point, thousands_sep) {
      var decimal, decimalPoint, negative;
      if (decimals == null) {
        decimals = 0;
      }
      if (dec_point == null) {
        dec_point = ',';
      }
      if (thousands_sep == null) {
        thousands_sep = ' ';
      }
      negative = number < 0 ? '-' : '';
      number = Math.abs(number);
      decimal = ((number - parseInt(number)).toFixed(decimals)).slice(2);
      number = ("" + (parseInt(number.toFixed(decimals)))).split('').reverse().join('').replace(/...(?!$)/g, "$&" + (thousands_sep.replace(/\$/g, '$$$$'))).split('').reverse().join('');
      decimalPoint = decimals !== 0 ? dec_point : '';
      return "" + negative + number + decimalPoint + decimal;
    };

    return NumberFormat;

  })();

  Computation = (function() {

    Computation.prototype.table = {};

    Computation.prototype.table_string = "issue_value	apr_45	fee_45	interest_45	fee_admin_45	fee_cash_45	total_45	total_pay_45	instalment_45	instalment_last_45	apr_60	fee_60	interest_60	fee_admin_60	fee_cash_60	total_60	total_pay_60	instalment_60	instalment_last_60	apr_100	fee_100	interest_100	fee_admin_100	fee_cash_100	total_100	total_pay_100	instalment_100	instalment_last_100\n  80000	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	49,70	35346	16582	18764	-	115346	115346	1154	1100\n  78000	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	49,70	34462	16167	18295	-	112462	112462	1125	1087\n  76000	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	49,70	33578	15753	17825	-	109578	109578	1096	1074\n  74000	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	49,70	32695	15338	17357	-	106695	106695	1067	1062\n  72000	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	49,70	31811	14924	16887	-	103811	103811	1039	950\n  70000	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	49,70	30927	14509	16418	-	100927	100927	1010	937\n  68000	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	49,70	30044	14095	15949	-	98044	98044	981	925\n  66000	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	49,70	29160	13680	15480	-	95160	95160	952	912\n  64000	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	49,70	28277	13266	15011	-	92277	92277	923	900\n  62000	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	49,70	27393	12851	14542	-	89393	89393	894	887\n  60000	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	49,70	26509	12436	14073	-	86509	86509	866	775\n  58000	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	49,70	25626	12022	13604	-	83626	83626	837	763\n  56000	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	49,70	24742	11607	13135	-	80742	80742	808	750\n  54000	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	49,70	23858	11193	12665	-	77858	77858	779	737\n  52000	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	49,70	22975	10778	12197	-	74975	74975	750	725\n  50000	-	-	-	-	-	-	-	-	-	63,93	15888	6386	9502	-	65888	65888	1099	1047	49,70	22091	10364	11727	-	72091	72091	721	712\n  49000	-	-	-	-	-	-	-	-	-	63,93	15570	6258	9312	-	64570	64570	1077	1027	-	-	-	-	-	-	-	-	-\n  48000	-	-	-	-	-	-	-	-	-	63,93	15252	6130	9122	-	63252	63252	1055	1007	49,70	21207	9949	11258	-	69207	69208	693	600\n  47000	-	-	-	-	-	-	-	-	-	63,93	14934	6002	8932	-	61934	61934	1033	987	-	-	-	-	-	-	-	-	-\n  46000	-	-	-	-	-	-	-	-	-	63,93	14617	5875	8742	-	60617	60617	1011	968	49,70	20324	9535	10789	-	66324	66325	664	588\n  45000	-	-	-	-	-	-	-	-	-	63,93	14299	5747	8552	-	59299	59299	989	948	-	-	-	-	-	-	-	-	-\n  44000	-	-	-	-	-	-	-	-	-	63,93	13981	5619	8362	-	57981	57981	967	928	49,70	19440	9120	10320	-	63440	63441	635	575\n  43000	-	-	-	-	-	-	-	-	-	63,93	13663	5492	8171	-	56663	56663	945	908	-	-	-	-	-	-	-	-	-\n  42000	-	-	-	-	-	-	-	-	-	63,93	13346	5364	7982	-	55346	55346	923	889	49,70	18556	8705	9851	-	60556	60557	606	562\n  41000	-	-	-	-	-	-	-	-	-	63,93	13028	5236	7792	-	54028	54028	901	869	-	-	-	-	-	-	-	-	-\n  40000	70,96	10215	3815	6400	-	50215	50215	1116	1111	63,93	12710	5109	7601	-	52710	52710	879	849	49,70	17673	8291	9382	-	57673	57674	577	550\n  39000	70,96	9959	3719	6240	-	48959	48959	1088	1087	63,93	12392	4981	7411	-	51392	51392	857	829	-	-	-	-	-	-	-	-	-\n  38000	70,96	9704	3624	6080	-	47704	47704	1061	1020	63,93	12075	4853	7222	-	50075	50075	835	810	49,70	16789	7876	8913	-	54789	54790	548	537\n  37000	70,96	9448	3528	5920	-	46448	46448	1033	996	63,93	11757	4726	7031	-	48757	48757	813	790	-	-	-	-	-	-	-	-	-\n  36000	70,96	9193	3433	5760	-	45193	45193	1005	973	63,93	11439	4598	6841	-	47439	47439	791	770	49,70	15906	7462	8444	-	51906	51907	520	426\n  35000	70,96	8938	3338	5600	-	43938	43938	977	950	63,93	11121	4470	6651	-	46121	46121	769	750	-	-	-	-	-	-	-	-	-\n  34000	70,96	8682	3242	5440	-	42682	42682	949	926	63,93	10804	4342	6462	-	44804	44804	747	731	49,70	15022	7047	7975	-	49022	49023	491	413\n  33000	70,96	8427	3147	5280	-	41427	41427	921	903	63,93	10486	4215	6271	-	43486	43486	725	711	-	-	-	-	-	-	-	-	-\n  32000	70,96	8172	3052	5120	-	40172	40172	893	880	63,93	10168	4087	6081	-	42168	42168	703	691	49,70	14138	6633	7505	-	46138	46139	462	400\n  31000	70,96	7916	2956	4960	-	38916	38916	865	856	63,93	9850	3959	5891	-	40850	40850	681	671	-	-	-	-	-	-	-	-	-\n  30000	70,96	7661	2861	4800	-	37661	37661	837	833	63,93	9533	3832	5701	-	39533	39533	659	652	49,70	13255	6218	7037	-	43255	43256	433	388\n  29000	70,96	7406	2766	4640	-	36406	36406	810	766	63,93	9215	3704	5511	-	38215	38215	637	632	-	-	-	-	-	-	-	-	-\n  28000	70,96	7150	2670	4480	-	35150	35150	782	742	63,93	8897	3576	5321	-	36897	36897	615	612	49,70	12371	5804	6567	-	40371	40372	404	375\n  27000	70,96	6895	2575	4320	-	33895	33895	754	719	63,93	8579	3448	5131	-	35579	35579	593	592	-	-	-	-	-	-	-	-	-\n  26000	70,96	6639	2479	4160	-	32639	32639	726	695	63,93	8262	3321	4941	-	34262	34262	572	514	49,70	11487	5389	6098	-	37487	37488	375	362\n  25000	70,96	6384	2384	4000	-	31384	31384	698	672	63,93	7944	3193	4751	-	32944	32944	550	494	-	-	-	-	-	-	-	-	-\n  24000	70,96	6129	2289	3840	-	30129	30129	670	649	63,93	7626	3065	4561	-	31626	31626	528	474	49,70	10604	4975	5629	-	34604	34605	347	251\n  23000	70,96	5873	2193	3680	-	28873	28873	642	625	63,93	7308	2937	4371	-	30308	30308	506	454	-	-	-	-	-	-	-	-	-\n  22000	70,96	5618	2098	3520	-	27618	27618	614	602	63,93	6991	2810	4181	-	28991	28991	484	435	49,70	9720	4560	5160	-	31720	31721	318	238\n  21000	70,96	5363	2003	3360	-	26363	26363	586	579	63,93	6673	2682	3991	-	27673	27673	462	415	-	-	-	-	-	-	-	-	-\n  20000	70,96	5107	1907	3200	-	25107	25107	558	555	63,93	6355	2554	3801	-	26355	26355	440	395	49,70	8836	4145	4691	-	28836	28837	289	225\n  19000	70,96	4852	1812	3040	-	23852	23852	531	488	63,93	6037	2426	3611	-	25037	25037	418	375	-	-	-	-	-	-	-	-	-\n  18000	70,96	4597	1717	2880	-	22597	22597	503	465	63,93	5720	2299	3421	-	23720	23720	396	356	49,70	7953	3731	4222	-	25953	25954	260	213\n  17000	70,96	4341	1621	2720	-	21341	21341	475	441	63,93	5402	2171	3231	-	22402	22402	374	336	-	-	-	-	-	-	-	-	-\n  16000	70,96	4086	1526	2560	-	20086	20086	447	418	63,93	5084	2043	3041	-	21084	21084	352	316	49,70	7069	3316	3753	-	23069	23070	231	200\n  15000	70,96	3830	1430	2400	-	18830	18830	419	394	63,93	4766	1916	2850	-	19766	19766	330	296	-	-	-	-	-	-	-	-	-\n  14000	70,96	3575	1335	2240	-	17575	17575	391	371	63,93	4449	1788	2661	-	18449	18449	308	277	-	-	-	-	-	-	-	-	-\n  13000	70,96	3320	1240	2080	-	16320	16320	363	348	63,93	4131	1660	2471	-	17131	17131	286	257	-	-	-	-	-	-	-	-	-\n  12000	70,96	3064	1144	1920	-	15064	15064	335	324	63,93	3813	1533	2280	-	15813	15813	264	237	-	-	-	-	-	-	-	-	-\n  11000	70,96	2809	1049	1760	-	13809	13809	307	301	63,93	3495	1405	2090	-	14495	14495	242	217	-	-	-	-	-	-	-	-	-\n  10000	70,96	2554	954	1600	-	12554	12554	279	278	63,93	3178	1277	1901	-	13178	13178	220	198	-	-	-	-	-	-	-	-	-\n  9000	70,96	2298	858	1440	-	11298	11298	252	210	63,93	2860	1150	1710	-	11860	11860	198	178	-	-	-	-	-	-	-	-	-\n  8000	70,96	2043	763	1280	-	10043	10043	224	187	63,93	2542	1022	1520	-	10542	10542	176	158	-	-	-	-	-	-	-	-	-\n  7000	70,96	1788	668	1120	-	8788	8788	196	164	63,93	2224	894	1330	-	9224	9224	154	138	-	-	-	-	-	-	-	-	-\n  6000	70,96	1532	572	960	-	7532	7532	168	140	63,93	1907	766	1141	-	7907	7907	132	119	-	-	-	-	-	-	-	-	-\n  5000	70,96	1277	477	800	-	6277	6277	140	117	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-\n  4000	70,96	1021	381	640	-	5021	5021	112	93	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-	-";

    function Computation() {
      var column, columns, counter, issue_value, row, week, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2;
      counter = 0;
      _ref = this.table_string.split("\n");
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        row = _ref[_i];
        columns = row.replace(/^\s+|\s+$/g, "").split("\t");
        if (counter === 0) {
          this.header = columns;
        } else {
          issue_value = this.get_value(columns, "issue_value");
          this.table[issue_value] = {};
          _ref1 = [45, 60, 100];
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            week = _ref1[_j];
            this.table[issue_value][week] = {};
            _ref2 = ["apr", "fee", "interest", "fee_admin", "fee_cash", "total", "total_pay", "instalment", "instalment_last"];
            for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
              column = _ref2[_k];
              this.table[issue_value][week][column] = this.get_value(columns, column + "_" + week);
            }
            this.table[issue_value][week]["interest_rate"] = week === 45 ? 20.11 : (week === 60 ? 19.98 : 19.00);
          }
        }
        counter++;
      }
    }

    Computation.prototype.get_value = function(columns, name) {
      var value;
      value = columns[$.inArray(name, this.header)].replace(",", ".");
      if (value !== "-") {
        return parseFloat(value);
      }
      return value;
    };

    Computation.prototype.get_allowed_weeks = function(issue_value) {
      var week, weeks, _i, _len, _ref;
      weeks = [];
      _ref = [45, 60, 100];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        week = _ref[_i];
        if (this.table[issue_value][week]["apr"] !== "-") {
          weeks.push(week);
        }
      }
      return weeks;
    };

    Computation.prototype.compute = function(issue_value, pay_period) {
      return this.table[issue_value][pay_period];
    };

    return Computation;

  })();

  Tooltip = (function() {

    function Tooltip(event) {
      this.out = __bind(this.out, this);

      var body_height, body_width, bottom, distance, layer_left, layer_padding, layer_top, layer_width, left, right, target, target_position, top;
      target = $(event.target);
      target_position = target.offset();
      body_width = $("body").width();
      body_height = $("body").height();
      this.name = target.attr("data-type");
      this.layer = $(".tooltip[data-type=" + this.name + "]");
      layer_padding = 5;
      distance = 5;
      top = target_position.top;
      bottom = body_height - top - target.height();
      left = target_position.left;
      right = body_width - left - target.width();
      if (left > right) {
        layer_width = left - (distance * 2 + layer_padding * 2);
        layer_left = left - (layer_width + layer_padding * 2) - distance;
      } else {
        layer_width = right - (distance * 2 + layer_padding * 2);
        layer_left = target_position.left + distance + target.width();
      }
      this.layer.css({
        left: layer_left,
        width: layer_width
      });
      if (top > bottom) {
        layer_top = target_position.top - this.layer.height() + 3;
      } else {
        layer_top = target_position.top;
      }
      this.layer.css({
        top: layer_top
      });
      this.layer.show();
    }

    Tooltip.prototype.out = function() {
      return this.layer.hide();
    };

    return Tooltip;

  })();

  jQuery(function() {
    var Calculator;
    Calculator = (function() {

      Calculator.prototype.select_issue_value = $("select[name='issue-value']");

      Calculator.prototype.select_pay_period = $("select[name='pay-period']");

      Calculator.prototype.instalment = $("#instalment");

      Calculator.prototype.total = $("#total");

      Calculator.prototype.apr = $("#apr");

      Calculator.prototype.fee = $("#fee");

      Calculator.prototype.interest = $("#interest");

      Calculator.prototype.rate = $("#rate");

      Calculator.prototype.instalment_last = $("#instalment-last");

      Calculator.prototype.fees = $("#fees");

      Calculator.prototype.computation = new Computation();

      function Calculator() {
        this.tooltip_out = __bind(this.tooltip_out, this);

        this.tooltip_over = __bind(this.tooltip_over, this);

        this.recalculate = __bind(this.recalculate, this);

        this.redraw = __bind(this.redraw, this);
        this.select_issue_value.change(this.redraw);
        this.select_pay_period.change(this.recalculate);
        this.make_select_issue_value();
        this.make_select_pay_period();
        this.recalculate();
        $(".question").mouseover(this.tooltip_over);
        $(".question").mouseout(this.tooltip_out);
      }

      Calculator.prototype.make_select_issue_value = function() {
        var selected, value, _i, _j, _results;
        for (value = _i = 4000; _i <= 50000; value = _i += 1000) {
          selected = value === 18000 ? "selected='selected'" : '';
          this.select_issue_value.append($("<option value=" + value + " " + selected + ">" + (NumberFormat.format(value)) + " Kč</option>"));
        }
        _results = [];
        for (value = _j = 52000; _j <= 80000; value = _j += 2000) {
          _results.push(this.select_issue_value.append($("<option value=" + value + ">" + (NumberFormat.format(value)) + " Kč</option>")));
        }
        return _results;
      };

      Calculator.prototype.make_select_pay_period = function(weeks) {
        var selected, value, _i, _len, _results;
        if (weeks == null) {
          weeks = [45, 60, 100];
        }
        this.select_pay_period.empty();
        _results = [];
        for (_i = 0, _len = weeks.length; _i < _len; _i++) {
          value = weeks[_i];
          selected = value === 60 ? "selected='selected'" : '';
          _results.push(this.select_pay_period.append($("<option value=" + value + " " + selected + ">" + value + " týdnů</option>")));
        }
        return _results;
      };

      Calculator.prototype.redraw = function() {
        var issue_value;
        issue_value = this.select_issue_value.val();
        this.make_select_pay_period(this.computation.get_allowed_weeks(issue_value));
        return this.recalculate();
      };

      Calculator.prototype.recalculate = function() {
        var issue, issue_value;
        issue_value = parseFloat(this.select_issue_value.val());
        issue = this.computation.compute(issue_value, this.select_pay_period.val());
        this.instalment.html(NumberFormat.format(issue.instalment) + " Kč");
        this.total.html(NumberFormat.format(issue_value + issue.interest + issue.fee_admin) + " Kč");
        this.apr.html(NumberFormat.format(issue.apr, 2) + " %");
        this.fee.html(NumberFormat.format(issue.fee_admin) + " Kč");
        this.interest.html(NumberFormat.format(issue.interest) + " Kč");
        this.rate.html(NumberFormat.format(issue.interest_rate, 2) + " %");
        this.instalment_last.html(NumberFormat.format(issue.instalment_last) + " Kč");
        return this.fees.html(NumberFormat.format(issue.interest + issue.fee_admin) + " Kč");
      };

      Calculator.prototype.tooltip_over = function(event) {
        return this.current_tooltip = new Tooltip(event);
      };

      Calculator.prototype.tooltip_out = function(event) {
        return this.current_tooltip.out();
      };

      return Calculator;

    })();
    return new Calculator();
  });

}).call(this);
